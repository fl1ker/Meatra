// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Таблица стол
model Table {
  id           Int           @id @default(autoincrement())
  capacity     Int
  reservations Reservation[] // связь: один стол -> много резерваций
}

// Таблица бронь
model Reservation {
  id         Int      @id @default(autoincrement())
  name       String
  phone      String
  date       DateTime
  time_start String
  time_end   String

  table   Table @relation(fields: [tableId], references: [id])
  tableId Int
}

model Admin {
  id       Int    @id @default(autoincrement())
  email    String @unique
  password String
}

model Menu {
  id         Int                      @id @default(autoincrement())
  name       String                   @unique
  categories MenuCategoryAssignment[]
}

model MenuCategory {
  id    Int                      @id @default(autoincrement())
  name  String
  menus MenuCategoryAssignment[]
  items MenuItem[]
}

model MenuCategoryAssignment {
  menuId     Int
  categoryId Int
  menu       Menu         @relation(fields: [menuId], references: [id], onDelete: Cascade)
  category   MenuCategory @relation(fields: [categoryId], references: [id], onDelete: Cascade)

  @@id([menuId, categoryId])
}

model MenuItem {
  id          Int          @id @default(autoincrement())
  name        String
  description String?
  price       Float
  categoryId  Int
  category    MenuCategory @relation(fields: [categoryId], references: [id], onDelete: Cascade)
}
